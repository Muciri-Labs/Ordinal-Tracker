generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TrackType {
  percentage
  absolute_value
}

model User {
  uId              String            @id @default(cuid())
  username         String            @unique
  email            String            @unique
  password         String
  teleId           String?
  ownedCollections User_Collection[]
  userWallets      User_Wallet[]
  floorAlerts      FloorAlerts[]
  userWatchlists   User_Watchlist[]
}

model User_Collection {
  uId          String
  user         User       @relation(fields: [uId], references: [uId])
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [cId])
  walletId     String
  wallet       Wallet     @relation(fields: [walletId], references: [wId])

  @@id([uId, collectionId, walletId])
}

model User_Watchlist {
  uId          String
  user         User       @relation(fields: [uId], references: [uId])
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [cId])

  @@id([uId, collectionId])
}

model Collection {
  cId             String            @id
  name            String?
  description     String?
  image           String?
  owner_count     Int?
  nft_count       Int?
  quantity        Int?
  userCollections User_Collection[]
  floorAlerts     FloorAlerts[]
  userWatchlists  User_Watchlist[]
}

model Wallet {
  wId                    String            @id
  lastTrackedTransaction String?
  lastTrackedTimeStamp   String?
  userWallets            User_Wallet[]
  userCollections        User_Collection[]
}

model FloorAlerts {
  aId          String     @id @default(cuid())
  uId          String
  user         User       @relation(fields: [uId], references: [uId])
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [cId])
  trackType    TrackType?
  refPrice     Int?
  direction    Boolean?
  value        Int?
  latestFloor  Int?
  timeStamp    String?
}

model User_Wallet {
  uId           String
  wId           String
  user          User     @relation(fields: [uId], references: [uId])
  wallet        Wallet   @relation(fields: [wId], references: [wId])
  alertsEnabled Boolean?

  @@id([uId, wId])
}
